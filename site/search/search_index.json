{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Rately is a configurable, per-identity rate limiting service that runs at Cloudflare's edge. Block abusive traffic before it reaches your servers. Limit by user ID, API key, header, query, or URL param \u2014 not just IP.</p> <p>Get Started \u2192 Documentation \u2192</p> <p></p> <ul> <li> <p> Edge Enforcement</p> <p>Block rate-limited requests at Cloudflare's edge with ~25ms added latency. Traffic never reaches your origin.</p> </li> <li> <p> Flexible Identity</p> <p>Rate limit by user ID, API key, header, query param, or custom attributes \u2014 not just IP addresses.</p> </li> <li> <p> Drop-in Integration</p> <p>CNAME your API through Rately (proxy mode) or call our Decision API \u2014 zero code changes required.</p> </li> <li> <p> Real-time Analytics</p> <p>Track usage patterns, identify top consumers, and monitor rate limit hits with detailed analytics.</p> </li> </ul>"},{"location":"#why-choose-rately","title":"Why Choose Rately?","text":""},{"location":"#built-for-scale","title":"Built for Scale","text":"<p>Running on Cloudflare's global network with 300+ locations worldwide, Rately handles millions of requests per second with atomic counters via Durable Objects.</p>"},{"location":"#instant-configuration","title":"Instant Configuration","text":"<p>Change rate limits on the fly. Override limits for specific users. No redeploys needed \u2014 changes take effect globally in seconds.</p>"},{"location":"#developer-friendly","title":"Developer Friendly","text":"<p>Simple REST API, SDKs for major languages, and comprehensive documentation. Integrate in minutes, not days.</p>"},{"location":"#usage-based-billing-ready","title":"Usage-Based Billing Ready","text":"<p>Track and aggregate usage data per customer. Export to Stripe or your billing system for metered billing and overage charges.</p>"},{"location":"#how-it-works","title":"How It Works","text":""},{"location":"#proxy-mode-recommended","title":"Proxy Mode (Recommended)","text":"<p><pre><code>Client \u2192 api.yourapp.com (CNAME) \u2192 Rately Edge \u2192 Your Origin\n</code></pre> Traffic flows through Rately. We check limits and forward allowed requests to your origin with rate limit headers.</p>"},{"location":"#control-plane-mode","title":"Control Plane Mode","text":"<p><pre><code>Client \u2192 Your API \u2192 POST /check (Rately) \u2192 Allow/Deny Response\n</code></pre> Your application calls Rately's Decision API to check if a request should be allowed.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Token Bucket &amp; Sliding Window algorithms for precise rate limiting</li> <li>Custom Policies per endpoint, method, or resource</li> <li>Override Rules for VIP users or specific conditions</li> <li>Signed Configurations with automatic edge distribution</li> <li>Fail-Safe Modes (open/closed/soft) for reliability</li> <li>DDoS Protection integration with Cloudflare WAF</li> </ul>"},{"location":"#example-configuration","title":"Example Configuration","text":"<pre><code>policies:\n  - id: api_standard\n    match: /api/*\n    key: \"user:{header.x-api-key}\"\n    limit: 1000\n    window_seconds: 60\n\n  - id: api_premium\n    match: /api/*\n    key: \"user:{header.x-api-key}\"\n    limit: 10000\n    window_seconds: 60\n    overrides:\n      - when: { header.x-plan: \"enterprise\" }\n        limit: unlimited\n</code></pre> <p>Get started for free \u2192</p>"},{"location":"features/sso/","title":"Single Sign On (SSO)","text":"<p>Streamline user authentication with Rately's Single Sign On feature. Enable secure, one-click sign-in using GitHub or Google accounts, eliminating the need for users to create and manage separate Rately credentials.</p> <ul> <li> <p> GitHub Integration</p> <p>Sign in seamlessly with your GitHub account. Perfect for developer teams and organizations already using GitHub.</p> </li> <li> <p> Google Integration</p> <p>Use your Google account for quick access. Ideal for teams using Google Workspace or Gmail.</p> </li> <li> <p> Enhanced Security</p> <p>Leverage OAuth 2.0 security standards with no additional passwords to manage or remember.</p> </li> <li> <p> Instant Setup</p> <p>Get started in seconds. No complex configuration or SAML setup required.</p> </li> </ul>"},{"location":"features/sso/#benefits","title":"Benefits","text":""},{"location":"features/sso/#simplified-user-management","title":"Simplified User Management","text":"<ul> <li>No need to create separate Rately accounts</li> <li>Automatically inherit permissions from your GitHub organization or Google Workspace</li> <li>Reduce password fatigue for your team</li> </ul>"},{"location":"features/sso/#enhanced-security","title":"Enhanced Security","text":"<ul> <li>OAuth 2.0 authentication with industry-standard security</li> <li>Multi-factor authentication through your existing provider</li> <li>Reduced attack surface with fewer credentials to manage</li> </ul>"},{"location":"features/sso/#faster-onboarding","title":"Faster Onboarding","text":"<ul> <li>Team members can access Rately instantly with existing accounts</li> <li>No waiting for account activation emails</li> <li>Seamless integration with existing workflows</li> </ul>"},{"location":"features/sso/#getting-started","title":"Getting Started","text":""},{"location":"features/sso/#github-sso-setup","title":"GitHub SSO Setup","text":"<ol> <li> <p>Organization Admin Setup <pre><code># Navigate to your Rately organization settings\n# Enable GitHub SSO under Authentication\n# Authorize Rately to access your GitHub organization\n</code></pre></p> </li> <li> <p>User Sign-In Process</p> </li> <li>Visit rately.dev</li> <li>Click \"Sign in with GitHub\"</li> <li>Authorize Rately to access your basic profile information</li> <li> <p>You're automatically signed in and ready to use Rately</p> </li> <li> <p>Permissions Mapping <pre><code># GitHub organization roles map to Rately permissions:\ngithub_role: rately_permission\nowner: admin\nmember: user\noutside_collaborator: readonly\n</code></pre></p> </li> </ol>"},{"location":"features/sso/#google-sso-setup","title":"Google SSO Setup","text":"<ol> <li> <p>Organization Admin Setup <pre><code># Navigate to your Rately organization settings\n# Enable Google SSO under Authentication\n# Configure your Google Workspace domain (optional)\n</code></pre></p> </li> <li> <p>User Sign-In Process</p> </li> <li>Visit rately.dev</li> <li>Click \"Sign in with Google\"</li> <li>Select your Google account</li> <li>Grant permission for Rately to access your profile</li> <li> <p>Start using Rately immediately</p> </li> <li> <p>Domain Restrictions <pre><code># Optionally restrict to specific domains:\nallowed_domains:\n  - yourcompany.com\n  - yourdomain.org\n# Or allow any Google account (default)\n</code></pre></p> </li> </ol>"},{"location":"features/sso/#configuration-examples","title":"Configuration Examples","text":""},{"location":"features/sso/#team-onboarding-workflow","title":"Team Onboarding Workflow","text":"<pre><code># Example: Developer team setup\nsso_provider: github\norganization: your-org\nauto_provision: true\ndefault_role: user\n\n# New team members automatically get access when they:\n# 1. Join your GitHub organization\n# 2. Sign in to Rately with GitHub SSO\n# 3. Automatically assigned 'user' role\n</code></pre>"},{"location":"features/sso/#enterprise-google-workspace","title":"Enterprise Google Workspace","text":"<pre><code># Example: Enterprise Google setup\nsso_provider: google\nworkspace_domain: company.com\nadmin_emails:\n  - admin@company.com\n  - devops@company.com\nauto_provision: true\nrequire_domain_match: true\n</code></pre>"},{"location":"features/sso/#mixed-authentication","title":"Mixed Authentication","text":"<pre><code># Support both SSO and traditional accounts\nauthentication_methods:\n  - sso_github\n  - sso_google\n  - email_password\n\n# Users can choose their preferred sign-in method\nfallback_auth: email_password\n</code></pre>"},{"location":"features/sso/#integration-with-rately-features","title":"Integration with Rately Features","text":""},{"location":"features/sso/#api-access-with-sso","title":"API Access with SSO","text":"<pre><code>// Your SSO-authenticated session automatically includes API access\nconst response = await fetch('https://api.rately.dev/policies', {\n  headers: {\n    'Authorization': `Bearer ${sso_session_token}`\n  }\n});\n</code></pre>"},{"location":"features/sso/#rate-limiting-by-sso-identity","title":"Rate Limiting by SSO Identity","text":"<pre><code>policies:\n  - id: sso_user_limits\n    match: /api/*\n    key: \"sso_user:{sso.user_id}\"\n    limit: 1000\n    window_seconds: 3600\n\n  - id: github_org_limits\n    match: /api/*\n    key: \"github_org:{sso.github.org}\"\n    limit: 50000\n    window_seconds: 3600\n</code></pre>"},{"location":"features/sso/#team-based-overrides","title":"Team-Based Overrides","text":"<pre><code>policies:\n  - id: team_based_limits\n    match: /api/*\n    key: \"user:{sso.user_id}\"\n    limit: 100\n    window_seconds: 60\n    overrides:\n      - when: { sso.github.team: \"platform-team\" }\n        limit: 10000\n      - when: { sso.google.domain: \"enterprise.com\" }\n        limit: 5000\n</code></pre>"},{"location":"features/sso/#troubleshooting","title":"Troubleshooting","text":""},{"location":"features/sso/#common-issues","title":"Common Issues","text":""},{"location":"features/sso/#unable-to-sign-in-with-github","title":"\"Unable to sign in with GitHub\"","text":"<p>Check Organization Settings</p> <p>Ensure your GitHub organization has authorized the Rately application:</p> <ol> <li>Go to GitHub Organization Settings \u2192 Third-party access</li> <li>Find \"Rately\" in the list</li> <li>Click \"Grant\" if not already authorized</li> </ol>"},{"location":"features/sso/#google-sign-in-fails","title":"\"Google sign-in fails\"","text":"<p>Domain Configuration</p> <p>If you've configured domain restrictions:</p> <ol> <li>Verify your email domain is in the allowed list</li> <li>Check if your admin has enabled Google Workspace integration</li> <li>Try signing in with a different Google account</li> </ol>"},{"location":"features/sso/#access-denied-after-successful-sso","title":"\"Access denied after successful SSO\"","text":"<p>Role Assignment</p> <p>Contact your Rately organization admin to verify:</p> <ul> <li>Your SSO account is mapped to the correct role</li> <li>Auto-provisioning is enabled for new users</li> <li>Your GitHub/Google account has the required permissions</li> </ul>"},{"location":"features/sso/#getting-help","title":"Getting Help","text":"<p>If you encounter issues not covered here:</p> <ul> <li>GitHub Issues: Check organization membership and permissions</li> <li>Google Domains: Verify Workspace admin settings</li> <li>Role Mapping: Contact your Rately organization administrator</li> <li>Technical Support: Email support@rately.dev with your SSO provider and error details</li> </ul>"},{"location":"features/sso/#security-considerations","title":"Security Considerations","text":""},{"location":"features/sso/#data-access","title":"Data Access","text":"<p>Rately only requests minimal permissions from your SSO provider:</p> <ul> <li>GitHub: Public profile information, organization membership</li> <li>Google: Basic profile information (name, email, profile picture)</li> </ul>"},{"location":"features/sso/#session-management","title":"Session Management","text":"<ul> <li>SSO sessions follow your provider's security policies</li> <li>Multi-factor authentication is inherited from your SSO provider</li> <li>Sessions can be revoked from either Rately or your SSO provider</li> </ul>"},{"location":"features/sso/#compliance","title":"Compliance","text":"<ul> <li>SOC 2 Type II compliant authentication flow</li> <li>GDPR compliant data handling</li> <li>Support for SAML and advanced enterprise features available on request</li> </ul>"},{"location":"features/sso/#faq","title":"FAQ","text":"Can I use both GitHub and Google SSO for the same organization? <p>Yes! Organizations can enable multiple SSO providers. Users can choose their preferred sign-in method each time they access Rately.</p> What happens to existing accounts when enabling SSO? <p>Existing email/password accounts continue to work normally. Users can optionally link their SSO accounts to existing Rately accounts through account settings.</p> Can I restrict SSO to specific GitHub organizations or Google domains? <p>Yes! Organization admins can configure domain restrictions for Google SSO and organization membership requirements for GitHub SSO.</p> How are user permissions determined with SSO? <p>Permissions are mapped from your SSO provider:</p> <ul> <li>GitHub: Based on organization role (owner \u2192 admin, member \u2192 user)</li> <li>Google: Based on domain membership and admin-configured rules</li> <li>Manual: Admins can override automatic role assignment</li> </ul> What if my SSO provider is down? <p>If you have fallback authentication enabled, users can sign in with email/password. For SSO-only setups, access is dependent on your SSO provider's availability.</p> Can I audit SSO sign-ins? <p>Yes! All SSO authentication events are logged in your Rately organization audit log, including successful sign-ins, failed attempts, and permission changes.</p> <p>Ready to enable SSO for your team? Contact your organization admin or get started with Rately today!</p>"},{"location":"home/get-started/","title":"Get Started with Rately","text":"<p>Set up rate limiting for your API in minutes. Block abusive traffic at the edge before it reaches your servers.</p>"},{"location":"home/get-started/#what-is-rately","title":"What is Rately?","text":"<p>Rately is a rate limiting service that runs on Cloudflare's global edge network. Unlike traditional rate limiting that runs on your servers, Rately blocks excessive traffic before it ever reaches your origin. Key benefits:</p> <ul> <li>Edge enforcement - ~25ms added latency, blocks at 300+ locations worldwide</li> <li>Flexible identity - Limit by user ID, API key, header, query param \u2014 not just IP</li> <li>Drop-in integration - No code changes required</li> <li>Instant configuration - Update limits on the fly without redeploys</li> <li>Single Sign On - Streamline team access with GitHub and Google SSO</li> </ul>"},{"location":"home/get-started/#quick-start","title":"Quick Start","text":""},{"location":"home/get-started/#step-1-sign-up","title":"Step 1: Sign Up","text":"<p>Choose your preferred sign-up method:</p> <p>Option A: Single Sign On (Recommended) 1. Visit rately.dev 2. Click \"Sign in with GitHub\" or \"Sign in with Google\" 3. Authorize Rately and get instant access 4. Learn more about SSO benefits \u2192</p> <p>Option B: Email &amp; Password 1. Visit rately.dev 2. Create your account with email and password 3. Verify your email and get your API credentials</p>"},{"location":"home/get-started/#step-2-choose-integration-mode","title":"Step 2: Choose Integration Mode","text":""},{"location":"home/get-started/#option-1-proxy-mode-recommended","title":"Option 1: Proxy Mode (Recommended)","text":"<p>Point your API traffic through Rately. Zero code changes required.</p> <pre><code>api.yourapp.com \u2192 CNAME \u2192 origin.rately.dev\n</code></pre>"},{"location":"home/get-started/#option-2-decision-api","title":"Option 2: Decision API","text":"<p>Your application calls Rately to check if requests should be allowed.</p> <pre><code>POST /check\nAuthorization: Bearer &lt;your-token&gt;\n\n{\n  \"key\": \"user:123\",\n  \"policy_id\": \"api_standard\"\n}\n</code></pre>"},{"location":"home/get-started/#step-3-configure-your-first-policy","title":"Step 3: Configure Your First Policy","text":"<p>Create a basic rate limiting policy:</p> <pre><code>policies:\n  - id: api_standard\n    match: /api/*\n    key: \"ip:{ip}\"           # Start with IP-based limiting\n    limit: 100\n    window_seconds: 60        # 100 requests per minute\n</code></pre>"},{"location":"home/get-started/#step-4-test-your-setup","title":"Step 4: Test Your Setup","text":""},{"location":"home/get-started/#for-proxy-mode","title":"For Proxy Mode:","text":"<pre><code># Make requests to your API\ncurl -i https://api.yourapp.com/users\n\n# Check rate limit headers\n# RateLimit-Limit: 100\n# RateLimit-Remaining: 99\n# RateLimit-Reset: 58\n</code></pre>"},{"location":"home/get-started/#for-decision-api","title":"For Decision API:","text":"<pre><code>curl -X POST https://api.rately.dev/check \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"key\": \"user:123\", \"policy_id\": \"api_standard\"}'\n</code></pre>"},{"location":"home/get-started/#common-configurations","title":"Common Configurations","text":""},{"location":"home/get-started/#per-user-rate-limiting","title":"Per-User Rate Limiting","text":"<pre><code>policies:\n  - id: user_limits\n    match: /api/*\n    key: \"user:{header.x-user-id}\"\n    limit: 1000\n    window_seconds: 3600    # 1000 requests per hour\n</code></pre>"},{"location":"home/get-started/#api-key-based-limits","title":"API Key Based Limits","text":"<pre><code>policies:\n  - id: api_key_limits\n    match: /api/*\n    key: \"key:{header.x-api-key}\"\n    limit: 10000\n    window_seconds: 86400   # 10k requests per day\n</code></pre>"},{"location":"home/get-started/#different-limits-by-plan","title":"Different Limits by Plan","text":"<pre><code>policies:\n  - id: tiered_limits\n    match: /api/*\n    key: \"user:{jwt.sub}\"\n    limit: 100              # Free tier default\n    window_seconds: 3600\n    overrides:\n      - when: { jwt.plan: \"pro\" }\n        limit: 1000\n      - when: { jwt.plan: \"enterprise\" }\n        limit: unlimited\n</code></pre>"},{"location":"home/get-started/#expensive-endpoint-protection","title":"Expensive Endpoint Protection","text":"<pre><code>policies:\n  - id: ai_endpoint\n    match: POST /api/ai/generate\n    key: \"user:{header.x-user-id}\"\n    limit: 10\n    window_seconds: 3600    # Only 10 AI calls per hour\n</code></pre>"},{"location":"home/get-started/#integration-examples","title":"Integration Examples","text":""},{"location":"home/get-started/#nodejs-express","title":"Node.js / Express","text":"<pre><code>// No code changes needed for Proxy Mode!\n// For Decision API:\napp.use(async (req, res, next) =&gt; {\n  const decision = await fetch('https://api.rately.dev/check', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${RATELY_TOKEN}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      key: `user:${req.user.id}`,\n      policy_id: 'api_standard'\n    })\n  });\n\n  if (!decision.ok) {\n    return res.status(429).json({ error: 'Rate limit exceeded' });\n  }\n\n  next();\n});\n</code></pre>"},{"location":"home/get-started/#python-fastapi","title":"Python / FastAPI","text":"<pre><code># No code changes needed for Proxy Mode!\n# For Decision API:\n@app.middleware(\"http\")\nasync def rate_limit_middleware(request: Request, call_next):\n    response = requests.post(\n        \"https://api.rately.dev/check\",\n        headers={\"Authorization\": f\"Bearer {RATELY_TOKEN}\"},\n        json={\n            \"key\": f\"user:{request.headers.get('x-user-id')}\",\n            \"policy_id\": \"api_standard\"\n        }\n    )\n\n    if response.status_code == 429:\n        return JSONResponse(\n            status_code=429,\n            content={\"error\": \"Rate limit exceeded\"}\n        )\n\n    return await call_next(request)\n</code></pre>"},{"location":"home/get-started/#monitoring-analytics","title":"Monitoring &amp; Analytics","text":""},{"location":"home/get-started/#view-real-time-metrics","title":"View Real-time Metrics","text":"<ul> <li>Active rate limits</li> <li>Top consumers</li> <li>Blocked requests</li> <li>Usage patterns</li> </ul>"},{"location":"home/get-started/#set-up-alerts","title":"Set Up Alerts","text":"<ul> <li>When specific users hit limits</li> <li>When overall traffic spikes</li> <li>When policies block &gt; X% of traffic</li> </ul>"},{"location":"home/get-started/#next-steps","title":"Next Steps","text":"<ol> <li>Add More Policies - Create specific limits for different endpoints</li> <li>Configure Overrides - Give VIP users higher limits</li> <li>Enable Analytics - Track usage patterns and optimize limits</li> <li>Set Up Billing Integration - Export usage data to Stripe for metered billing</li> <li>Test Fail Modes - Configure behavior when Rately is unreachable</li> </ol>"},{"location":"home/get-started/#need-help","title":"Need Help?","text":"<ul> <li>Documentation: Full API reference and guides</li> <li>Support: Contact support@rately.dev</li> <li>Status: status.rately.dev</li> </ul> <p>Ready to protect your API? Start free trial today!</p>"}]}